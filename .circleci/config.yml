# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.10.0

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      # - run: yarn ci-scripts:test

      # deploy to gh pages
      # - run: yarn ci-scripts:deploy
  run-test:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.10.0

    working_directory: ~/repo

    steps:
      - checkout

      - run: yarn install

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn ci-scripts:test

  deploy-gh:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.10.0

    working_directory: ~/repo

    steps:
      - checkout

      - run: git config --global user.email "yamaha001001@gmail.com"
      - run: git config --global user.name "Sergey Lysenko CI"

      - run: yarn install

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: git checkout .
      - run: |
          for file in `ls -a`
          do
            if [ $file != "." ] && [ $file != ".." ] && [ $file != "node_modules" ] && [ $file != "tsconfig.json" ] && [ $file != ".circleci" ] && [ $file != "package.json" ] && [ $file != ".git" ] && [ $file != ".storybook" ] && [ $file != "components" ]
            then
              rm -rf $file
            fi
          done
      - run: yarn storybook-deploy
      - run: rm package.json && rm -rf node_modules && rm tsconfig.json && rm -rf .storybook && rm -rf components
      - run: git add .
      - run: git commit -m 'Deploy Storybook to GitHub Pages :)'
      - run: git push --force --quiet git@github.com:lysenko-sergey-developer/components-ui.git master:gh-pages
      

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore: 
                - master
                - gh-pages
      - run-test:
          requires:
            - build
          filters:
            branches:
              ignore:
                - master
                - gh-pages
      - deploy-gh:
          filters:
            branches:
              only: master